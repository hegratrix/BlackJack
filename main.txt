//START NAVIGATION LOGIC

var bjInfo = document.querySelector("#bjInfo")
var fullBj = document.querySelector("#fullBj")
var infoDiv = document.querySelector("#infoDiv")
var gameBoard = document.querySelector(".game")
var aboutBJInfoLink = document.querySelector("#aboutBJInfoLink")
var howToBJInfoLink = document.querySelector("#howToBJInfoLink")
var assBJLink = document.querySelector("#assBJLink")
var assUpBJDiv = document.querySelector("#assUpBJDiv")
var assUpBjToGame = document.querySelector("#assUpBjToGame")
var backToBJLink = document.querySelector("#backToBJLink")
var aboutBJtoPlay = document.querySelector("#aboutBJtoPlay")
var howToToPlay = document.querySelector("#howToToPlay")
var aboutLearn420BJ = document.querySelector("#aboutLearn420BJ")
var about420BJDiv = document.querySelector("#about420BJDiv")
var howToBJDiv = document.querySelector("#howToBJDiv")
var linkToBJSource = document.querySelector("#linkToBJSource")
var bjToList = document.querySelector("#bjToList")

bjInfo.addEventListener("mouseover", function() {
  bjInfo.style.color = "white"
})

bjInfo.addEventListener("mouseout", function() {
  bjInfo.style.color = "yellow"
})

bjInfo.addEventListener("click", function() {
  fullBj.style.display = "none"
  bjInfo.style.display = "none"
  about420BJDiv.style.display = "none"
  assUpBJDiv.style.display = "none"
  infoDiv.style.display = "block"
  gameBoard.style.backgroundColor = "darkgreen"
  gameBoard.style.border = "solid 2vw limegreen"
  howToBJDiv.style.display = "none"

})

bjToList.addEventListener("mouseover", function() {
  this.style.color = "white"
})

bjToList.addEventListener("mouseout", function() {
  this.style.color = "yellow"
})

bjToList.addEventListener("click", function() {
  this.style.color = "yellow"
  document.querySelector(".game").style.display = "none"
  document.querySelector("#bjAdGroup").style.display = "none"
})

aboutBJInfoLink.addEventListener("mouseover", function() {
  this.style.color = "whitesmoke"
})

aboutBJInfoLink.addEventListener("mouseout", function() {
  this.style.color = "yellow"
})

aboutBJInfoLink.addEventListener("click", function() {
  about420BJDiv.style.display = "block"
  bjInfo.style.display = "block"
  infoDiv.style.display = "none"

})

aboutBJtoPlay.addEventListener("mouseover", function() {
  this.style.color = "limegreen"
})

aboutBJtoPlay.addEventListener("mouseout", function() {
  this.style.color = "yellow"
})

aboutBJtoPlay.addEventListener("click", function() {
  about420BJDiv.style.display = "none"
  fullBj.style.display = "block"
  gameBoard.style.backgroundColor = "limegreen"
  gameBoard.style.border = "solid 2vw darkgreen"
})

aboutLearn420BJ.addEventListener("mouseover", function() {

  this.style.color = "limegreen"
})

aboutLearn420BJ.addEventListener("mouseout", function() {

  this.style.color = "yellow"
})

aboutLearn420BJ.addEventListener("click", function() {
  about420BJDiv.style.display = "none"
  howToBJDiv.style.display = "block"
})

howToBJInfoLink.addEventListener("mouseover", function() {
  this.style.color = "whitesmoke"
})

howToBJInfoLink.addEventListener("mouseout", function() {
  this.style.color = "yellow"
})

howToBJInfoLink.addEventListener("click", function() {
  infoDiv.style.display = "none"
  howToBJDiv.style.display = "block"
  bjInfo.style.display = "block"

})

howToToPlay.addEventListener("mouseover", function() {
  this.style.color = "limegreen"
})

howToToPlay.addEventListener("mouseout", function() {
  this.style.color = "yellow"
})

howToToPlay.addEventListener("click", function() {
  howToBJDiv.style.display = "none"
  fullBj.style.display = "block"
  gameBoard.style.backgroundColor = "limegreen"
  gameBoard.style.border = "solid 2vw darkgreen"
})

assBJLink.addEventListener("mouseover", function() {
  this.style.color = "whitesmoke"
})

assBJLink.addEventListener("mouseout", function() {
  this.style.color = "yellow"
})

assBJLink.addEventListener("click", function() {
  infoDiv.style.display = "none"
  assUpBJDiv.style.display = "block"
  bjInfo.style.display = "block"
})

linkToBJSource.addEventListener("mouseover", function() {
  this.style.color = "limegreen"
})

linkToBJSource.addEventListener("click", function() {
  window.open('https://www.thatsoftwaredude.com/content/6417/how-to-code-blackjack-using-javascript', '_blank');
})

assUpBjToGame.addEventListener("mouseover", function() {
  this.style.color = "limegreen"
})

assUpBjToGame.addEventListener("mouseout", function() {
  this.style.color = "yellow"
})

assUpBjToGame.addEventListener("click", function() {
  assUpBJDiv.style.display = "none"
  fullBj.style.display = "block"
  gameBoard.style.backgroundColor = "limegreen"
  gameBoard.style.border = "solid 2vw darkgreen"
})

backToBJLink.addEventListener("mouseover", function() {
  this.style.color = "whitesmoke"
})

backToBJLink.addEventListener("mouseout", function() {
  this.style.color = "yellow"
})

backToBJLink.addEventListener("click", function() {
  fullBj.style.display = "block"
  gameBoard.style.backgroundColor = "limegreen"
  gameBoard.style.border = "solid 2vw darkgreen"
  infoDiv.style.display = "none"
  bjInfo.style.display = "block"
})
//END NAVIGATION LOGIC

//START GAME LOGIC

var suits = ["Spades", "Hearts", "Clubs", "Diamonds"]
var values = ["2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K", "A"]
var deck = new Array()
var players = new Array()
var currentPlayer = 0
var currentHand = 1
var wins = 0
var losses = 0
var cardsInHand1 = 2
var cardsInHand2 = 2
var statusHand1 = null
var statusHand2 = null
var aceInHand = false
var aceInPlay1 = false
var aceInPlay2 = false
var aceHeartsInPlay = false
var aceClubsInPlay = false
var aceSpadesInPlay = false
var aceDiamondsInPlay = false
var handOne11 = true
var handTwo11 = true
var end = false

function createDeck() {
  deck = new Array();
  for (var i = 0; i < values.length; i++) {
    for (var x = 0; x < suits.length; x++) {
      weight = parseInt(values[i]);
      if (values[i] == "J" || values[i] == "Q" || values[i] == "K")
        weight = 10;
      if (values[i] == "A" && suits[x] == "Hearts") {
        weight = 11
      } else if (values[i] == "A" && suits[x] == "Spades") {
        weight = 11
      } else if (values[i] == "A" && suits[x] == "Clubs") {
        weight = 11
      } else if (values[i] == "A" && suits[x] == "Diamonds") {
        weight = 11
      }
      card = {
        Value: values[i],
        Suit: suits[x],
        Weight: weight
      };
      deck.push(card);
    }
  }
}

function createPlayers(num) {
  players = new Array()
  for (var i = 1; i <= num; i++) {
    var hand = new Array()
    var player = {
      Name: 'Hand ' + i,
      ID: i,
      Points: 0,
      Hand: hand
    }
    players.push(player)
  }
}

function createPlayersUI() {
  document.getElementById('players').innerHTML = '';
  for (var i = 0; i < players.length; i++) {
    var div_player = document.createElement('div');
    var div_playerid = document.createElement('div');
    var div_hand = document.createElement('div');
    var div_points = document.createElement('div');

    div_points.className = 'points';
    div_points.id = 'points_' + i;
    div_player.id = 'player_' + i;
    div_player.className = 'player';
    div_hand.id = 'hand_' + i;

    div_playerid.innerHTML = 'Hand ' + players[i].ID;
    div_player.appendChild(div_playerid);
    div_player.appendChild(div_hand);
    div_player.appendChild(div_points);
    document.getElementById('players').appendChild(div_player);
  }
}

function shuffle() {
  // for 1000 turns
  // switch the values of two random cards
  for (var i = 0; i < 1000; i++) {
    var location1 = Math.floor((Math.random() * deck.length));
    var location2 = Math.floor((Math.random() * deck.length));
    var tmp = deck[location1];

    deck[location1] = deck[location2];
    deck[location2] = tmp;
  }
}

function startblackjack() {
  document.getElementById('btnStart').value = 'Restart';
  document.getElementById("status").style.display = "none";
  document.querySelector("#hitMeButt").disabled = false
  // deal 2 cards to every player object
  cardsInHand1 = 2
  cardsInHand2 = 2
  currentPlayer = 0
  currentHand = 1
  statusPlayer1 = null
  statusPlayer2 = null
  aceInHand = false
  aceInPlay1 = false
  aceInPlay2 = false
  aceHeartsInPlay = false
  aceClubsInPlay = false
  aceSpadesInPlay = false
  aceDiamondsInPlay = false
  handOne11 = true
  handTwo11 = true
  end = false
  createDeck()
  shuffle()
  createPlayers(2)
  createPlayersUI()
  dealHands()

  document.getElementById('player_' + currentPlayer).classList.add('active')
}

function dealHands() {
  // alternate handing cards to each player
  // 2 cards each
  for (var i = 0; i < 2; i++) {
    for (var x = 0; x < players.length; x++) {

      var card = deck.pop();
      players[x].Hand.push(card);

      //Set which player is being dealt to...
      if (currentHand == 0) {
        currentHand = 1
      } else {
        currentHand = 0
      }




      //Set the value of Aces!!!
      if (card.Value == "A" && card.Suit == "Hearts") {
        aceHeartsInPlay = true
        aceInHand = true
        if (players[0].Points - 11 < 10) {
          card.Weight = 11
        } else if (players[0].Points - 11 >= 11) {
          card.Weight = 1
        } else if (players[1].Points - 11 < 10) {
          card.Weight = 11
        } else if (players[1].Points - 11 >= 11) {
          card.Weight = 1
        }
      }

      if (card.Value == "A" && card.Suit == "Clubs") {
        aceClubsInPlay = true
        aceInHand = true
        if (players[0].Points - 11 < 10) {
          card.Weight = 11
        } else if (players[0].Points - 11 >= 11) {
          card.Weight = 1
        } else if (players[1].Points - 11 < 10) {
          card.Weight = 11
        } else if (players[1].Points - 11 >= 11) {
          card.Weight = 1
        }
      }

      if (card.Value == "A" && card.Suit == "Spades") {
        aceSpadesInPlay = true
        aceInHand = true
        if (players[0].Points - 11 < 10) {
          card.Weight = 11
        } else if (players[0].Points - 11 >= 11) {
          card.Weight = 1
        } else if (players[1].Points - 11 < 10) {
          card.Weight = 11
        } else if (players[1].Points - 11 >= 11) {
          card.Weight = 1
        }
      }

      if (card.Value == "A" && card.Suit == "Diamonds") {
        aceDiamondsInPlay = true
        aceInHand = true
        if (players[0].Points - 11 < 10) {
          card.Weight = 11
        } else if (players[0].Points - 11 >= 11) {
          card.Weight = 1
        } else if (players[1].Points - 11 < 10) {
          card.Weight = 11
        } else if (players[1].Points - 11 >= 11) {
          card.Weight = 1
        }
      }


      bjOnDealCheck()


      renderCard(card, x);
      updatePoints();
    }
  }
  updateDeck();
}

function renderCard(card, player) {
  var hand = document.getElementById('hand_' + player);

  if (card.Value == "A" && player == 0) {
    aceInHand = true
    aceInPlay1 = true
  } else if (card.Value == "A" && player == 1) {
    aceInHand = true
    aceInPlay2 = true
  }


  hand.appendChild(getCardUI(card));
}

function getCardUI(card) {
  var el = document.createElement('div');
  var icon = '';
  if (card.Suit == 'Hearts')
    icon = '&hearts;';
  else if (card.Suit == 'Spades')
    icon = '&spades;'
  else if (card.Suit == 'Diamonds')
    icon = '&diams;';
  else
    icon = '&clubs;';
  el.className = 'card'
  el.innerHTML = card.Value + '<br/>' + icon;
  return el;
}

function getPoints(player) {
  // returns the number of points that a player has in hand

  var points = 0;

  for (var i = 0; i < players[player].Hand.length; i++) {
    points += players[player].Hand[i].Weight;
  }



  players[player].Points = points;

}

function updatePoints() {
  for (var i = 0; i < players.length; i++) {
    getPoints(i);

    document.getElementById('points_' + i).innerHTML = players[i].Points;
  }

}

function handOneSort() {

  if (currentHand == 0) {
    if (players[0].Points < 17 && cardsInHand1 == 4) {
      statusHand1 = "under17MaxCard"
      stay()
    } else if (players[0].Points == 21 && cardsInHand1 == 3) {
      statusHand1 = "twentyOne"
      stay()
    } else if (players[0].Points == 21 && cardsInHand1 == 4) {
      statusHand1 = "maxJack"
      stay()
    } else if (players[0].Points > 21 && cardsInHand1 == 4) {
      statusHand1 = "over21MaxCard"
      stay()
    } else if (cardsInHand1 == 4) {
      statusHand1 = "maxCardsReached"
      stay()
    } else if (players[0].Points > 21 && cardsInHand1 == 3) {
      statusHand1 = "threeCardBust"
      stay()
    } else if (players[0].Points < 21 && cardsInHand1 == 3) {
      statusHand1 = "threeCardNormal"
    } else if (players[0].Points < 21 && cardsInHand1 == 4) {
      statusHand1 = "normal"
      stay()
    }
  }
}

function handTwoSort() {
  if (currentHand == 1) {
    if (players[1].Points < 17 && cardsInHand2 == 4) {
      statusHand2 = "under17MaxCard"
      end = true
      stay()
    } else if (players[1].Points == 21 && cardsInHand2 == 3) {
      statusHand2 = "twentyOne"
      end = true
      stay()
    } else if (players[1].Points == 21 && cardsInHand2 == 4) {
      statusHand2 = "maxJack"
      end = true
      stay()
    } else if (players[1].Points > 21 && cardsInHand2 == 4) {
      statusHand2 = "over21MaxCard"
      end = true
      stay()
    } else if (cardsInHand2 == 4) {
      statusHand2 = "maxCardsReached"
      end = true
      stay()
    } else if (players[1].Points > 21 && cardsInHand2 == 3) {
      statusHand2 = "threeCardBust"
      end = true
      stay()
    } else if (players[1].Points < 21 && cardsInHand2 == 3) {
      statusHand2 = "threeCardNormal"

    } else if (players[1].Points < 21 && cardsInHand2 == 4) {
      statusHand2 = "normal"
      end = true
      stay()
    }
  }
}


function hitMe() {
  // pop a card from the deck to the current player
  // check if current player new points are over 21
  var card = deck.pop();

  players[currentPlayer].Hand.push(card);

  if (currentPlayer == 0) {
    cardsInHand1 = cardsInHand1 + 1
    currentHand = 0
  }

  if (currentPlayer == 1) {
    cardsInHand2 = cardsInHand2 + 1
    currentHand = 1
  }

  if (card.Value == "A" && card.Suit == "Hearts") {
    aceHeartsInPlay = true
    aceInHand = true
    if (players[0].Points < 10) {
      card.Weight = 11
    } else if (players[0].Points >= 11) {
      card.Weight = 1
    } else if (players[1].Points < 10) {
      card.Weight = 11
    } else if (players[1].Points >= 11) {
      card.Weight = 1
    }


  } else if (card.Value == "A" && card.Suit == "Clubs") {

    aceClubsInPlay = true
    aceInHand = true
    if (players[0].Points < 10) {
      card.Weight = 11
    } else if (players[0].Points >= 11) {
      card.Weight = 1
    } else if (players[1].Points < 10) {
      card.Weight = 11
    } else if (players[1].Points >= 11) {
      card.Weight = 1
    }


  } else if (card.Value == "A" && card.Suit == "Spades") {
    aceSpadesInPlay = true
    aceInHand = true
    if (players[0].Points < 10) {
      card.Weight = 11
    } else if (players[0].Points >= 11) {
      card.Weight = 1
    } else if (players[1].Points < 10) {
      card.Weight = 11
    } else if (players[1].Points >= 11) {
      card.Weight = 1
    }


  } else if (card.Value == "A" && card.Suit == "Diamonds") {
    aceDiamondsInPlay = true
    aceInHand = true
    if (players[0].Points < 10) {
      card.Weight = 11
    } else if (players[0].Points >= 11) {
      card.Weight = 1
    } else if (players[1].Points < 10) {
      card.Weight = 11
    } else if (players[1].Points >= 11) {
      card.Weight = 1
    }

  }

  renderCard(card, currentPlayer);


  //handOneSort()
  //handTwoSort()
  updatePoints();
  updateDeck();


}

function stay() {
  // move on to next player, if any
  if (currentPlayer != players.length - 1) {
    document.getElementById('player_' + currentPlayer).classList.remove('active');
    currentPlayer += 1;
    document.getElementById('player_' + currentPlayer).classList.add('active');


  } else {
    document.querySelector("#hitMeButt").disabled = true
    document.querySelector("#bjStayH2").disabled = false


    alert(end + " BEFORE...")
    end = true
    alert(end + " After...")


    check()

  }

}




//START MAIN SCOREBOARD LOGIC

var bjWon = 0
var bjTied = 0
var bjLost = 0
var bjWonSB = document.querySelector("#mainBJWon")
var bjTiedSB = document.querySelector("#mainBJTied")
var bjLostSB = document.querySelector("#mainBJLost")

function updateMainScore() {
  alert("Score Being UPDATES!!!")
  if (bjWon == 0) {
    bjWonSB.style.color = "whitesmoke"
  } else {
    bjWonSB.style.color = "forestgreen"
    bjWonSB.textContent = bjWon
  }

  if (bjTied == 0) {
    bjTiedSB.style.color = "whitesmoke"

  } else {
    bjTiedSB.style.color = "yellow"
    bjTiedSB.textContent = bjTied
  }

  if (bjLost == 0) {
    bjLostSB.style.color = "whitesmoke"
  } else {
    bjLostSB.style.color = "red"
    bjLostSB.textContent = bjLost
  }

}

function bjOnDealCheck() {
  if (players[1].Points == 21 && cardsInHand2 == 2) {
    statusHand2 = "blackjack"
    alert("Two BLACKJACK")

  }

  if (players[0].Points == 21 && cardsInHand1 == 2) {
    statusHand1 = "blackjack"
    alert("One BLACKJACK")
    stay()
  }



}

function blackjackCheck() {
  if (statusHand1 == "blackjack" && end == true) {

    if (statusHand2 == "blackjack" && end == true) {
      alert("BJ TIE!!!")
      bjWon = bjWon + 2
      updateMainScore()
    }

    if (statusHand2 == "twentyOne" && end == true) {
      alert("Hand One BJ VS 21... Tie for 21 Match... Win for BJ!!!")
      bjTied = bjTied + 1
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "maxJack" && end == true) {
      alert("Hand One BJ VS MaxJack... Tie for 21 Match... Win for BJ!!!")
      bjTied = bjTied + 1
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "over21MaxCard" && end == true) {
      alert("Hand One BJ Win!!! MAXOVER")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "maxCardsReached" && end == true) {
      alert("Hand One BJ Win!!! MaxCardReached")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "under17MaxCard" && end == true) {
      alert("Hand One BJ LOST!!! H2 UNDER17MAX beats all!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardBust" && end == true) {
      alert("Hand One BJ Win!!! threeCardBust")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardNormal" && end == true) {
      alert("Hand One BJ Win!!! threeCardNormal")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "normal" && end == true) {
      alert("Hand One BJ Win!!! Normal")
      bjWon = bjWon + 2
      updateMainScore()
    }


  }

}

function twentyOneCheck() {
  if (statusHand1 == "twentyOne" && end == true) {

    if (statusHand2 == "blackjack" && end == true) {
      alert("21 BLACKJACK TIE LOSS... Tie for 21 Loss for nature BLACKJACK!!!")
      bjTied = bjTied + 1
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "twentyOne" && end == true) {
      alert("Hand One vs VS 21... Tie for 21 Match... Tie for Card Count!!!")
      bjTied = bjTied + 2
      updateMainScore()
    }

    if (statusHand2 == "maxJack" && end == true) {
      alert("Hand One 21 VS MaxJack... Tie for 21 match... loss to MAXJACK for BJ!!!")
      bjTied = bjTied + 1
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "over21MaxCard" && end == true) {
      alert("Hand One 21 Win!!! MAXOVER")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "maxCardsReached" && end == true) {
      alert("Hand One 21 Win!!! MaxCardReached")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "under17MaxCard" && end == true) {
      alert("Hand One 21 LOST!!! H2 UNDER17MAX beats all!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardBust" && end == true) {
      alert("Hand One 21 Win!!! threeCardBust")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardNormal" && end == true) {
      alert("Hand One 21 Win!!! threeCardNormal")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "normal" && end == true) {
      alert("Hand One 21 Win!!! Normal")
      bjWon = bjWon + 2
      updateMainScore()
    }
  }

}

function maxJackCheck() {



  if (statusHand1 == "maxJack" && end == true) {



    if (statusHand2 == "blackjack" && end == true) {
      alert("MaxJAck BlackJAck Tie!!! 1Point")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "twentyOne" && end == true) {
      alert("MaxJaCK 21 Power Win!!!")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "maxJack" && end == true) {
      alert("MaxJack... Tie!!!")
      bjWon = bjWon + 2
      updateMainScore()
    }

    if (statusHand2 == "over21MaxCard" && end == true) {
      alert("Hand One MaxJack Win!!! MAXOVER")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "maxCardsReached" && end == true) {
      alert("Hand One MaxJack Win!!! MaxCardReached")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "under17MaxCard" && end == true) {
      alert("Hand One MaxJack WIN!!! H2 UNDER17MAX beats all BUT MAXJACK!!!")
      bjWon = bjwon + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardBust" && end == true) {
      alert("Hand One MaxJack Win!!! threeCardBust")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardNormal" && end == true) {
      alert("Hand One MaxJack Win!!! threeCardNormal")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "normal" && end == true) {
      alert("Hand One MaxJack Win!!! Normal")
      bjWon = bjWon + 2
      updateMainScore()
    }
  }

}

function maxCardsOverCheck() {



  if (statusHand1 == "over21MaxCard" && end == true) {

    if (statusHand2 == "blackjack" && end == true) {
      alert("over21MaxCard BLACKJACK... BUST!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "twentyOne" && end == true) {
      alert("over21MaxCard TwentyOne... BUST!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand1 == "over21MaxCard" && statusHand2 == "maxJack" && end == true) {
      alert("over21MaxCard MAXJACK... BUST!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "over21MaxCard" && end == true) {
      alert("MAXCARDOVER21 WAR... WHO GOT THE CLOSEST TO 21???")
      if (players[0].Points == players[1].Points) {
        alert("OverMax Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("Hand One Closer to 21 EQuals a WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("Hand TWO Closer to 21 EQuals a LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }

    if (statusHand2 == "maxCardsReached" && end == true) {
      alert("Hand One MAXCARDOVER21 BUST!!! MaxCardReached")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "under17MaxCard" && end == true) {
      alert("Hand One MAXCARDOVER21 BUST!!! H2 UNDER17MAX beats all BUT MAXJACK!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardBust" && end == true) {
      alert("Cards COunt Must Match for there to be a bust battle... this is just an overMax Bust!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardNormal" && end == true) {
      alert("Hand One MAXCARDOVER21 Bust!!! threeCardNormal")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "normal" && end == true) {
      alert("Hand One MAXCARDOVER21 BUST!!! Normal")
      bjLost = bjLost + 1
      updateMainScore()
    }
  }

}

function maxCardsReachedCheck() {



  if (statusHand1 == "maxCardsReached" && end == true) {


    if (statusHand2 == "blackjack" && end == true) {
      alert("maxCardsReached lost to BLACKJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "twentyOne" && end == true) {
      alert("maxCardsReached Lost to TwentyOne... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "maxJack" && end == true) {
      alert("maxCardsReached lost to MAXJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "over21MaxCard" && end == true) {
      alert("maxCardsReached Wins to a busted over21MaxCard WON...")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "maxCardsReached" && end == true) {
      alert("Hand One maxCardsReached Normal Battle!!! MaxCardReached")
      if (players[0].Points == players[1].Points) {
        alert("maxCardsReached battle Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("maxCardsReached battle WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("maxCardsReached battle LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }

    if (statusHand2 == "under17MaxCard" && end == true) {
      alert("Hand One maxCardsReached LOSS!!! H2 UNDER17MAX beats all BUT MAXJACK!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardBust" && end == true) {
      alert("maxCardsReached Win h2BUst with 3 cards!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardNormal" && end == true) {
      alert("Hand One maxCardsReached vs threeCardNormal battle")
      if (players[0].Points == players[1].Points) {
        alert("maxCardsReached vs threeCardNormal Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("maxCardsReached vs threeCardNormal WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("maxCardsReached vs threeCardNormal LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }

    if (statusHand2 == "normal" && end == true) {
      alert("Hand One maxCardsReached vs NORMAL battle")
      if (players[0].Points == players[1].Points) {
        alert("maxCardsReached vs NORMAL Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("maxCardsReached vs NORMAL WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("maxCardsReached vs NORMAL LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }
  }

}

function hand2Under17MaxCheck() {



  if (statusHand1 == "under17MaxCard" && end == true) {



    if (statusHand2 == "blackjack" && end == true) {
      alert("maxCardsReached lost to BLACKJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "twentyOne" && end == true) {
      alert("maxCardsReached Lost to TwentyOne... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "maxJack" && end == true) {
      alert("maxCardsReached lost to MAXJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "over21MaxCard" && end == true) {
      alert("maxCardsReached Wins to a busted over21MaxCard WON...")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "maxCardsReached" && end == true) {
      alert("under17MaxCard vs maxCardsReached Battle!!! MaxCardReached")
      if (players[0].Points == players[1].Points) {
        alert("under17MaxCard vs maxCardsReached Battle Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("under17MaxCard vs maxCardsReached Battle WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("under17MaxCard vs maxCardsReached Battle LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }

    if (statusHand2 == "under17MaxCard" && end == true) {
      alert("under17MaxCard Battle that you automatically lose!!! H2 UNDER17MAX beats all!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardBust" && end == true) {
      alert("under17MaxCard vs threeCardBust that you automatically lose!!! H2 UNDER17MAX beats all!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardNormal" && end == true) {
      alert("under17MaxCard Vs ThreeCardNormal that you automatically lose!!! H2 UNDER17MAX beats all!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "normal" && end == true) {
      alert("under17MaxCard vs Normal that you automatically lose!!! H2 UNDER17MAX beats all!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }
  }



}

function threeCardBustCheck() {



  if (statusHand1 == "threeCardBust" && end == true) {



    if (statusHand2 == "blackjack" && end == true) {
      alert("threeCardBust lost to BLACKJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "twentyOne" && end == true) {
      alert("threeCardBust Lost to TwentyOne... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "maxJack" && end == true) {
      alert("threeCardBust lost to MAXJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "over21MaxCard" && end == true) {
      alert("threeCardBust busted to over21MaxCard BUST...")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "maxCardsReached" && end == true) {
      alert("threeCardBust busted to maxCardsReached BUST...")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "under17MaxCard" && end == true) {
      alert("threeCardBust to an automatic under17Max LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardBust" && end == true) {
      alert("threeCardBust BATTLE!!!")
      if (players[0].Points == players[1].Points) {
        alert("threeCardBust BATTLE Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("threeCardBust BATTLE Closer to 21 EQuals a WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("threeCardBust BATTLE Hand TWO Closer to 21 EQuals a LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }

    if (statusHand2 == "threeCardNormal" && end == true) {
      alert("Hand One threeCardBust vs threeCardNormal BUST!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "normal" && end == true) {
      alert("Hand One threeCardBust vs NORMAL BUST!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }
  }


}

function threeCardNormalCheck() {



  if (statusHand1 == "threeCardNormal" && end == true) {



    if (statusHand2 == "blackjack" && end == true) {
      alert("threeCardNormal lost to BLACKJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "twentyOne" && end == true) {
      alert("threeCardNormal Lost to TwentyOne... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "maxJack" && end == true) {
      alert("threeCardNormal lost to MAXJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "over21MaxCard" && end == true) {
      alert("threeCardNormal WINS to over21MaxCard BUST WIN!!!")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "maxCardsReached" && end == true) {
      alert("threeCardNormal vs maxCardsReached BATTLE!!!")
      if (players[0].Points == players[1].Points) {
        alert("threeCardNormal vs maxCardsReached Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("threeCardNormal vs maxCardsReached WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("threeCardNormal vs maxCardsReached LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }

    if (statusHand2 == "under17MaxCard" && end == true) {
      alert("threeCardNormal to an automatic under17Max LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardBust" && end == true) {
      alert("threeCardNormal WINS to threeCardBust BUST WIN!!!")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardNormal" && end == true) {
      alert("Hand One threeCardNormal BATTLE!!!")
      if (players[0].Points == players[1].Points) {
        alert("threeCardNormal battle Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("threeCardNormal battle WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("threeCardNormal battle LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }

    if (statusHand2 == "normal" && end == true) {
      alert("Hand One threeCardNormal VS NORMAL BATTLE!!!")
      if (players[0].Points == players[1].Points) {
        alert("threeCardNormal VS NORMAL battle Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("threeCardNormal VS NORMAL battle WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("threeCardNormal VS NORMAL battle LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }
  }


}

function normalCheck() {


  if (statusHand1 == "normal" && end == true) {


    if (statusHand2 == "blackjack" && end == true) {
      alert("normal lost to BLACKJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "twentyOne" && end == true) {
      alert("normal Lost to TwentyOne... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "maxJack" && end == true) {
      alert("normal lost to MAXJACK... LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "over21MaxCard" && end == true) {
      alert("normal WINS to over21MaxCard BUST WIN!!!")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "maxCardsReached" && end == true) {
      alert("normal vs maxCardsReached BATTLE!!!")
      if (players[0].Points == players[1].Points) {
        alert("normal vs maxCardsReached Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("normal vs maxCardsReached WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("normal vs maxCardsReached LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }

    if (statusHand2 == "under17MaxCard" && end == true) {
      alert("normal to an automatic under17Max LOSS!!!")
      bjLost = bjLost + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardBust" && end == true) {
      alert("normal WINS to threeCardBust BUST WIN!!!")
      bjWon = bjWon + 1
      updateMainScore()
    }

    if (statusHand2 == "threeCardNormal" && end == true) {
      alert("Hand One threeCardNormal BATTLE!!!")
      if (players[0].Points == players[1].Points) {
        alert("threeCardNormal battle Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("threeCardNormal battle WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("threeCardNormal battle LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }

    if (statusHand2 == "normal" && end == true) {
      alert("Hand One Normal BATTLE!!!")
      if (players[0].Points == players[1].Points) {
        alert("Normal battle Tie!!!")
        bjTied = bjTied + 1
        updateMainScore()
      } else if (players[0].Points > players[1].Points) {
        alert("Normal battle WIN!!!")
        bjWon = bjWon + 1
        updateMainScore()
      } else if (players[0].Points < players[1].Points) {
        alert("Normal battle LOSE!!!")
        bjLost = bjLost + 1
        updateMainScore()
      }
    }
  }


}


function check() {


  if (end == true && currentPlayer == 1) {

    alert("HAND ONE STATUS = " + statusHand1 + " HAND TWO STATUS = " + statusHand2)


    blackjackCheck()
    twentyOneCheck()
    maxJackCheck()
    maxCardsOverCheck()
    maxCardsReachedCheck()
    hand2Under17MaxCheck()
    threeCardBustCheck()
    threeCardNormalCheck()
    normalCheck()

  }
}

function updateDeck() {
  document.getElementById('deckcount').innerHTML = deck.length;
}

function handOneNormalCheck() {
  //alert(statusHand1)
  if (statusHand1 == "normal" && statusHand2 == "normal") {
    if (players[0].Points == players[1].Points) {
      alert("Normal Tied")
      bjTied = bjTied + 1
    } else if (players[0].Points > players[1].Points) {
      alert("Normal Win")
      bjWon = bjWon + 1
    } else if (players[0].Points < players[1].Points) {
      alert("Normal Lost")
      bjLost = bjLost + 1
    }
  }
}









function theEnd() {


}

window.addEventListener('load', function() {
  createDeck();
  shuffle();
  createPlayers(2);
});